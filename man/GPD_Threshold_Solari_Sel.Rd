% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GPD_Threshold_Solari_Sel.R
\name{GPD_Threshold_Solari_Sel}
\alias{GPD_Threshold_Solari_Sel}
\title{Goodness-of-fit for the GPD}
\usage{
GPD_Threshold_Solari_Sel(
  Event,
  Data,
  Solari_Output,
  Thres,
  Alpha = 0.1,
  N_Sim = 10^4,
  RP_Min = 1,
  RP_Max = 1000,
  RP_Plot = 100,
  mu = 365.25,
  y_lab = "Data"
)
}
\arguments{
\item{Event}{Numeric vector containing independent events declustered using a moving window approach.}

\item{Data}{Original time series. Dataframe containing two columns. In column: \itemize{
\item \code{1} A \code{"Date"} object of equally spaced discrete time steps.
\item \code{2} Numeric vector containing corresponding time series values.
}}

\item{Solari_Output}{Output of the \code{GPD_Threshold_Solari} function.}

\item{Thres}{Numeric vector of length one specifying the threshold to analyze, chosen by the user based on plots from the \code{GPD_Threshold_Solari} function.}

\item{Alpha}{Numeric vector of length one specifying the level of confidence associated with the confidence interval i.e., the probability that the interval contains the true value of the parameter is \eqn{1-\frac{Alpha}{2}}. The interval is referred to as the \eqn{100(1-\frac{Alpha}{2})\%} confidence interval. Default is \code{0.1}.}

\item{N_Sim}{Numeric vector of length one specifying the number of bootstrap samples. Default is \code{10^4}.}

\item{RP_Min}{Numeric vector of length one specifying the minimum return level to be calculated. Default is \code{1}.}

\item{RP_Max}{Numeric vector of length one specifying the maximum return level to be calculated. Default is \code{1000}.}

\item{RP_Plot}{Numeric vector of length one specifying the return level in the lower right plot. Default is \code{100}.}

\item{mu}{(average) occurrence frequency of events in the original time series \code{Data}. Numeric vector of length one. Default is \code{365.25}, daily data.}

\item{y_lab}{Character vector specifying the y-axis label of the return level plot.}
}
\value{
List containing three objects: \code{Estimate}, \code{CI_Upper} and \code{CI_Lower}. The \code{Estimate} dataframe comprises \itemize{
\item \code{xi}
GPD shape parameter estimate for the threshold is \code{Thres}.
\item \code{sigma}
GPD scale parameter estimate for the threshold is \code{Thres}.
\item \code{Thres}
GPD location parameter estimate for the threshold is \code{Thres}.
\item \code{rate}
GPD rate parameter i.e., number of independent excesses per year for a threshold of \code{Thres}.
\item The remaining columns are \code{RL}
Return level estimates from the GPD using a threshold of \code{Thres}.
}
\code{CI_Upper} and \code{CI_Lower} give the upper and lower bounds of the \eqn{100(1-\frac{Alpha}{2})\%} confidence interval for the corresponding element in \code{Estimate}.
Top row: Histograms of the GPD parameter estimates based on a nonparametric bootstrapping simulation. Grey bars correspond to the estimates obtained as the threshold (\code{Thres}) is varied, found by running the function a necessary input of the function. Continuous black lines correspond to results obtained by fixing the threshold at \code{Thres}. Dashed blue lines correspond to the expected values for the fixed threshold.
Lower left: Return level plot. Return levels of the observations estimated from the empirical distribution. Grey bars correspond to the maximum of the upper and lower bounds of the \eqn{100(1-\frac{Alpha}{2})\%} confidence intervals as the threshold is varied. Continuous black lines correspond to results obtained by fixing the threshold at \code{Thres}. Dashed blue lines correspond to the expected values for the fixed threshold.
Lower right: As in the top row but for the 100 years return period quantile.
}
\description{
A nonparametric bootstrapping procedure is undertaken to assess the uncertainty in the GPD parameters and associated return levels for a GPD fit to observations above a user specified threshold. The estimates are compared with those obtained at other thresholds by running the \code{GPD_Threshold_Solari} function beforehand, and using its output as an input of this function. The code is based on the \code{AUTOMATICO_MLE_BOOT} function provided by Sebastian Solari.
}
\examples{
Rainfall_Declust_SW<-Decluster_SW(Data=S22.Detrend.df[,c(1:2)],Window_Width=7)
Finding an appropriate threshold for the declustered series
S22_OsWL_Solari<-GPD_Threshold_Solari(Event=Rainfall_Declust_SW$Declustered,
                                      Data=na.omit(S22.Detrend.df[,2]))
S22_OsWL_Solari<-GPD_Threshold_Solari_Sel(Event=Rainfall_Declust_SW$Declustered,
                                          Data=na.omit(S22.Detrend.df[,2]),
                                          Thres=S22_OsWL_Solari$Candidate_Threshold)
}
